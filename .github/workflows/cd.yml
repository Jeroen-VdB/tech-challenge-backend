name: CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]
    paths-ignore:
      - ".github/**"
      - "README.md"
      - "doc"
      - "LICENSE"
  pull_request:
    branches: [ "main", "master", "develop" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug

jobs:
  # build:
  #   runs-on: ubuntu-latest
    
  #   services:
  #     mysql:
  #       image: mysql:5.7
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #         MYSQL_DATABASE: movies
  #       ports:
  #         - 3306:3306
  #       options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: HatsuneMiku3939/direnv-action@v1
  #       with:
  #           direnvVersion: 2.32.1
  #           masks: SECRET1, SECRET2
  #     - name: Use Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20.x'
  #     - run: npm ci
  #     - run: npm run build --if-present
  #     - run: npm test
  
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: 'actions/checkout@v4'
    
    - uses: HatsuneMiku3939/direnv-action@v1
      with:
          direnvVersion: 2.32.1

    - uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider:  ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
        service_account:  ${{ vars.SERVICE_ACCOUNT }}

    - id: 'deploy'
      uses: 'google-github-actions/deploy-cloudrun@v2'
      with:
        service: 'tech-challenge-backend'
        source: '.'

    - name: 'Use output'
      run: 'curl "${{ steps.deploy.outputs.url }}"'