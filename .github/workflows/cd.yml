name: CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]
    paths-ignore:
      - ".github/**"
      - "README.md"
      - "doc"
      - "LICENSE"
  pull_request:
    branches: [ "main", "master", "develop" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug

jobs:  
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: 'actions/checkout@v4'

    - uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider:  ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
        project_id: 'techchallengebackend'

    - id: 'deploy'
      uses: 'google-github-actions/deploy-cloudrun@v2'
      with:
        service: 'api'
        source: '.'
        region: 'us-central1'
        flags: '--set-cloudsql-instances=techchallengebackend:us-central1:backendsql'
        env_vars: |-
          MYSQL_USER=root
          MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          API_SQL_USER=root
          API_SQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          API_SQL_SCHEMA=movies
          API_PORT=8080
          CLOUD_SQL_CONNECTION_NAME=techchallengebackend:us-central1:backendsql
          NODE_ENV=production
          LOG_LEVEL=info
          OTEL_SERVICE_NAME=tech-challenge-api
          OTEL_DEBUG=false

    - name: 'Use output'
      run: 'curl "${{ steps.deploy.outputs.url }}"'